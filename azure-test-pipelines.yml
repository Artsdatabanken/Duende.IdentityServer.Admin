# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
   exclude:
     - main
     - master

resources:
- repo: self

variables:
  #tag: '$(Build.BuildId)'
  tag: 'test'
stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest

    variables:
      buildConfiguration: "Release"
      solutionPath: "**/*.sln"

    steps:
    # - task: NuGetCommand@2
      # inputs:
        # command: 'restore'
        # restoreSolution: '**/*.sln'
        # feedsToUse: 'config'
    - task: DotNetCoreCLI@2
      displayName: "Build"
      inputs:
        command: "build"
        projects: $(solutionPath)
        configuration: $(buildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: "Publish and zip"
      inputs:
        command: publish
        publishWebProjects: False
        projects: '**/src/Skoruba.Duende.IdentityServer.STS.Identity/Skoruba.Duende.IdentityServer.STS.Identity.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: DotNetCoreCLI@2
      displayName: "Publish and zip admin"
      inputs:
        command: publish
        publishWebProjects: False
        projects: '**/src/Skoruba.Duende.IdentityServer.Admin/Skoruba.Duende.IdentityServer.Admin.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: "$(Build.ArtifactStagingDirectory)"
        ArtifactName: "identityserver"
        publishLocation: "Container"

